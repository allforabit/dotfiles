allow the user configuration of the keywords for method and variable
definition. This would be usefull if the user defines its own macros
and need to generate tags for them.

(semantic-get-all-local-variables) ?

semantic-fetch-tags

add Lang:

http://cedet.sourceforge.net/addlang.shtml

* TODO

** extend parse-ast and grammar for list/number
** improve code: search for filter and assoc/list equivalent
** replacing expandfull by expand in the first rule
** collect import for ns
  
* context parsing
  The Semantic analyzer is a complex engine which has been broken down across several modules. When the Semantic analyzer fails, start with semantic-analyze-debug-assist, then dive into some of these files.
  
  semantic-ctxt.el
Local context parser. Contains overloadable functions used to move around through different scopes, get
local variables, and collect the current prefix used when doing completion

semantic-scope.el
Calculate scope for a location in a buffer. The scope includes local variables, and tag lists in scope for various reasons, such as C++ using statements. 

semantic-ia.el
Interactive Analyzer functions. Simple routines that do completion or lookups based on the results from the Analyzer. These routines are meant as examples for application writers, but are quite useful as they are. 

* smart completion
* defrecord and deftype definitions has CLASSES tags
* include tags are missing

*  How to
** override semantic-ia-insert-tag-default
** get semantic-analyze-current-context working
** check semantic-ia-fast-jump working?
** (define-mode-local-override semantic-get-local-variables python-mode ()
  "Get the local variables based on point's context.
To be implemented for Python!  For now just return nil."
  nil)
** define-mode-local-override semantic-tag-include-filename python-mode (tag)
** override semantic-sb-tag-children-to-expand ?
